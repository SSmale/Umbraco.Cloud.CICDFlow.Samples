#pwsh-pipeline
name: $(MajorVersion).$(MinorVersion)$(Rev:.r)

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: MajorVersion
    value: 0
  - name: MinorVersion
    value: 5
  - name: BuildConfiguration
    value: 'Release'
  - name: projectId
    value: 12abc3de-4f5g-6789-0hi1-23j456789012 # update to use your projectId - ideally put into an environment variable 
  - name: baseUrl # Umbraco Cloud Base API path for CI/CD feature
    value: https://api.cloud.umbraco.com

trigger:
  batch: true
  branches:
    include:
      - main

# Actual build and test steps has been omitted from this pipeline sample

stages:
  - stage: PreparePackageStage
    displayName: Prepare and Package Deployment Package
    jobs:
      - job: PackageAndPublish
        displayName: Package and publish (artifact)
        steps:
          # switch the gitignore files so cloud does not ignore the build frontend assets
          - script: cp cloud.gitignore .gitignore
            displayName: Prepare Cloud Git Ignore

          # zip everything, except what is defined in the '.zipignore'
          - script: zip -r dist/sources_$(Build.BuildNumber).zip . -x@zip.ignore
            displayName: Zip source files to package artifact

          - publish: $(System.DefaultWorkingDirectory)/dist/
            displayName: Publish packaged source zip artifact (to pipeline artifacts)
            artifact: SourcesZip

  - stage: DeployStage
    displayName: Deploy
    dependsOn: BuildAndTestStage
    jobs:
      - job: DeployJob
        displayName: Deploy
        steps:
          - download: current
            displayName: Get source zip from build
            artifact: SourcesZip

          # Request to prepare a deployment
          # - sets the commit message to be used in cloud 
          # - supplies you with a deploymentId to be used in the rest of the process
          - task: PowerShell@2
            displayName: Create Deployment Meta Information
            name: create_deployment
            env:
              umbracoApiKey: $(umbracoCloudApiKey) # fetch secret environment value
            inputs:
              pwsh: true
              targetType: 'filePath'
              filePath: devops/powershell/new-deployment.ps1
              arguments: > # Use this to avoid newline characters in multiline string
                -BaseUrl $(baseUrl)
                -ProjectId $(projectId)
                -ApiKey $($env:umbracoApiKey)
                -CommitMessage "Deploying $(Build.BuildNumber)"
                -PipelineVendor "AZUREDEVOPS"

          # Upload your zipped artifact
          - task: PowerShell@2
            displayName: Upload zipped source code package
            name: upload_package
            env:
              umbracoApiKey: $(umbracoCloudApiKey)
            inputs:
              pwsh: true
              targetType: 'filePath'
              filePath: devops/powershell/add-deployment-package.ps1
              arguments: > 
                -BaseUrl $(baseUrl)
                -ProjectId $(projectId)
                -DeploymentId $(deploymentId)
                -ApiKey $($env:umbracoApiKey)
                -FilePath $(Pipeline.Workspace)/SourcesZip/sources_$(Build.BuildNumber).zip

          # Actually request to start the deployment process in cloud
          - task: PowerShell@2
            displayName: Start deployment
            name: start_deployment
            env:
              umbracoApiKey: $(umbracoCloudApiKey)
            inputs:
              pwsh: true
              targetType: 'filePath'
              filePath: devops/powershell/start-deployment.ps1
              arguments: > 
                -BaseUrl $(baseUrl)
                -ProjectId $(projectId)
                -DeploymentId $(deploymentId)
                -ApiKey $($env:umbracoApiKey)

          # Poll until deployment finishes 
          - task: PowerShell@2
            displayName: Wait for deployment to complete
            name: get_deployment_status
            env:
              umbracoApiKey: $(umbracoCloudApiKey)
            inputs:
              pwsh: true
              targetType: 'filePath'
              filePath: devops/powershell/test-deployment-status.ps1
              arguments: > 
                -BaseUrl $(baseUrl)
                -ProjectId $(projectId)
                -DeploymentId $(deploymentId)
                -ApiKey $($env:umbracoApiKey)